version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak_server
    command: start-dev
    restart: always
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/db_keycloak
      KC_DB_USERNAME: user_keycloak
      KC_DB_PASSWORD: 0RMepM886VIh
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - postgres    

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/db_personne
      SPRING_DATASOURCE_USERNAME: user_personne
      SPRING_DATASOURCE_PASSWORD: Ilm4Uex09Z9I
      KEYCLOAK_URL: http://keycloak_server:8080
      KEYCLOAK_REALM: personne-realm
      KEYCLOAK_CLIENT_ID: personne-client
    depends_on:
      - postgres
    ports:
      - "8089:8089"


#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    container_name: frontend_app
#    ports:
#      - "3000:3000"
#    depends_on:
#      - backend

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.2
    container_name: logstash
    ports:
      - "5000:5000"
      - "9600:9600"
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
    depends_on:
      - backend
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - default

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - default

volumes:
  postgres_data:
  esdata:
    driver: local